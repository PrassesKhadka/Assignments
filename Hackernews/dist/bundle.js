(()=>{"use strict";var e=function(e,t,n,r){return new(n||(n=Promise))((function(c,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?c(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))},t=function(e,t){var n,r,c,a,i={label:0,sent:function(){if(1&c[0])throw c[1];return c[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,o[0]&&(i=0)),i;)try{if(n=1,r&&(c=2&o[0]?r.return:o[0]?r.throw||((c=r.return)&&c.call(r),0):r.next)&&!(c=c.call(r,o[1])).done)return c;switch(r=0,c&&(o=[2&o[0],c.value]),o[0]){case 0:case 1:c=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((c=(c=i.trys).length>0&&c[c.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!c||o[1]>c[0]&&o[1]<c[3])){i.label=o[1];break}if(6===o[0]&&i.label<c[1]){i.label=c[1],c=o;break}if(c&&i.label<c[2]){i.label=c[2],i.ops.push(o);break}c[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=c=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};function n(){return{getStories:function(){return e(this,void 0,void 0,(function(){return t(this,(function(e){switch(e.label){case 0:return[4,fetch("https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty")];case 1:return[4,e.sent().json()];case 2:return[2,e.sent()]}}))}))},getStory:function(n){return e(this,void 0,void 0,(function(){return t(this,(function(e){switch(e.label){case 0:return[4,fetch("https://hacker-news.firebaseio.com/v0/item/".concat(n,".json?print=pretty"))];case 1:return[4,e.sent().json()];case 2:return[2,e.sent()]}}))}))},getComment:function(n){return e(this,void 0,void 0,(function(){return t(this,(function(e){switch(e.label){case 0:return[4,fetch("https://hacker-news.firebaseio.com/v0/item/".concat(n,".json?print=pretty"))];case 1:return[4,e.sent().json()];case 2:return[2,e.sent()]}}))}))}}}var r=function(e,t,n,r){return new(n||(n=Promise))((function(c,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function o(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?c(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}s((r=r.apply(e,t||[])).next())}))},c=function(e,t){var n,r,c,a,i={label:0,sent:function(){if(1&c[0])throw c[1];return c[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,o[0]&&(i=0)),i;)try{if(n=1,r&&(c=2&o[0]?r.return:o[0]?r.throw||((c=r.return)&&c.call(r),0):r.next)&&!(c=c.call(r,o[1])).done)return c;switch(r=0,c&&(o=[2&o[0],c.value]),o[0]){case 0:case 1:c=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((c=(c=i.trys).length>0&&c[c.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!c||o[1]>c[0]&&o[1]<c[3])){i.label=o[1];break}if(6===o[0]&&i.label<c[1]){i.label=c[1],c=o;break}if(c&&i.label<c[2]){i.label=c[2],i.ops.push(o);break}c[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=c=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},a=function(e){void 0===e&&(e=10);var t=1,a=1,i=[],o=[],s=[],l={};function u(){return r(this,void 0,void 0,(function(){var a,u,d,m,f,p=this;return c(this,(function(v){switch(v.label){case 0:return 0!==i.length?[3,2]:[4,n().getStories()];case 1:i=v.sent(),v.label=2;case 2:return a=(t-1)*e,u=t*e,o=i.slice(a,u),l[t.toString()]?(s=l[t],[3,7]):[3,3];case 3:return[4,o.map((function(e){return r(p,void 0,void 0,(function(){return c(this,(function(t){switch(t.label){case 0:return[4,n().getStory(e)];case 1:return[2,t.sent()]}}))}))}))];case 4:return d=v.sent(),[4,Promise.all(d)];case 5:return s=v.sent(),m=l,f=t.toString(),[4,Promise.all(d)];case 6:m[f]=v.sent(),v.label=7;case 7:return[2]}}))}))}function d(e){return r(this,void 0,void 0,(function(){var t,a=this;return c(this,(function(i){return document.querySelector(".inner-comment-box"),(t=document.createElement("div")).classList.add("inner-comment-box"),e.forEach((function(e){return r(a,void 0,void 0,(function(){function a(){return r(this,void 0,void 0,(function(){var e;return c(this,(function(t){switch(t.label){case 0:return 0!==i.kids.length?[3,1]:(h.removeEventListener("click",a),[3,3]);case 1:return[4,d(i.kids)];case 2:e=t.sent(),o.append(e),t.label=3;case 3:return h.removeEventListener("click",a),[2]}}))}))}var i,o,s,l,u,m,f,p,v,h;return c(this,(function(r){switch(r.label){case 0:return[4,n().getComment(e)];case 1:return i=r.sent(),(o=document.createElement("div")).classList.add("comment"),(s=document.createElement("div")).classList.add("user-icon"),(l=document.createElement("span")).classList.add("material-icons"),l.textContent="person",s.appendChild(l),(u=document.createElement("div")).classList.add("user-details"),(m=document.createElement("p")).textContent="".concat(i.by),m.classList.add("user-name"),f=document.createElement("p"),p=new Date(i.time).toLocaleString(),f.textContent="Time: ".concat(p),f.classList.add("comment-text"),u.append(m,f),(v=document.createElement("div")).classList.add("comment-text"),v.innerHTML=i.text,(h=document.createElement("div")).classList.add("reply-icon"),h.innerHTML='\n          <span class="material-icons">comment</span>\n          '.concat(i.kids?"<span>".concat(i.kids.length,"</span>"):"<span>0</span>","\n      "),o.append(s,u,v,h),t.append(o),h.addEventListener("click",a),[2]}}))}))})),[2,t]}))}))}return{indexNo:t,nextPage:function(){t=9+(a=a%10+1)},previousPage:function(){a--,(t=a-9)<1&&(t=(a=10)-9)},goToIndex:function(e){return t=e},render:function(){return r(this,void 0,void 0,(function(){var t;return c(this,(function(n){switch(n.label){case 0:return t=document.querySelector(".inner-container"),function(){for(var t=document.querySelector(".inner-container"),n=0;n<e;n++){var r=document.createElement("div");r.innerHTML='\n                <div class="box">\n                    <div class="skeleton skeleton-text"></div>\n                    <div class="skeleton skeleton-text"></div>\n                    <div class="skeleton skeleton-text"></div>\n                    <div class="skeleton skeleton-text"></div>\n                    <div class="skeleton skeleton-text"></div>\n                </div>\n            ',t.appendChild(r)}}(),[4,u()];case 1:return n.sent(),t.innerHTML="",s.forEach((function(e){var n=document.createElement("div");n.classList.add("box");var a=document.createElement("div");a.classList.add("upper-box");var i=document.createElement("div");i.classList.add("lower-box");var o=document.createElement("div");o.classList.add("title"),o.textContent=e.title;var s=document.createElement("div");s.innerHTML='<div class="author"><span class="material-icons">person</span> '.concat(e.by,"</div>");var l=document.createElement("div");l.classList.add("comment-box"),l.innerHTML='<span class="material-icons">comment</span><span>'.concat(e.kids?e.kids.length:"0","</span>");var u=document.createElement("p"),m=new Date(e.time).toLocaleString();u.textContent="".concat(m);var f=document.createElement("div"),p=document.createElement("a");p.href=e.url,p.target="_blank",p.innerHTML='<span class="material-icons">open_in_new</span>',f.append(p),a.append(o),i.append(s,l,u,f),n.append(a,i),t.appendChild(n),o.addEventListener("click",(function(){!function(e){r(this,void 0,void 0,(function(){var t,n,r,a,i,o,s,l,u,m,f;return c(this,(function(c){switch(c.label){case 0:return t=document.querySelector(".inner-container"),(n=document.createElement("div")).classList.add("comment-box"),t.innerHTML="",(r=document.createElement("div")).classList.add("box"),(a=document.createElement("h2")).textContent=e.title,(i=document.createElement("p")).textContent="By: ".concat(e.by),o=document.createElement("p"),(s=document.createElement("a")).href=e.url,s.textContent=e.url,o.appendChild(document.createTextNode("URL: ")),o.appendChild(s),l=document.createElement("p"),u=new Date(e.time).toLocaleString(),l.textContent="Time: ".concat(u),(m=document.createElement("p")).textContent="no.of comments: ".concat(e.kids.length),r.appendChild(a),r.appendChild(i),r.appendChild(o),r.appendChild(l),r.appendChild(m),0!==e.kids.length?[3,1]:(n.innerHTML="No Comments to Show",[3,3]);case 1:return[4,d(e.kids)];case 2:f=c.sent(),n.append(f),c.label=3;case 3:return t.append(r,n),[2]}}))}))}(e)}))})),[2]}}))}))}}}(5),i=a.nextPage,o=a.previousPage,s=a.goToIndex,l=a.render,u=document.querySelector(".inner-container"),d=document.querySelectorAll(".nav-btn"),m=document.querySelector(".next-btn"),f=document.querySelector(".previous-btn");d.forEach((function(e,t){e.addEventListener("click",(function(){u.innerHTML="",s(t+1),l(),d.forEach((function(e){e.classList.remove("active")})),e.classList.add("active")}))})),m.addEventListener("click",(function(){u.innerHTML="",i(),l();var e=1;d.forEach((function(t,n){t.classList.contains("active")&&(e=n),t.classList.remove("active")})),d.forEach((function(t,n){n===e+1&&t.classList.add("active")}))})),f.addEventListener("click",(function(){u.innerHTML="",o(),l();var e=1;d.forEach((function(t,n){t.classList.contains("active")&&(e=n),t.classList.remove("active")})),d.forEach((function(t,n){0!=e&&n===e-1&&t.classList.add("active"),0===e&&0===n&&t.classList.add("active")}))})),l()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,