(()=>{"use strict";var e=function(e,t,n,r){return new(n||(n=Promise))((function(c,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function a(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?c(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}s((r=r.apply(e,t||[])).next())}))},t=function(e,t){var n,r,c,o,i={label:0,sent:function(){if(1&c[0])throw c[1];return c[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,a[0]&&(i=0)),i;)try{if(n=1,r&&(c=2&a[0]?r.return:a[0]?r.throw||((c=r.return)&&c.call(r),0):r.next)&&!(c=c.call(r,a[1])).done)return c;switch(r=0,c&&(a=[2&a[0],c.value]),a[0]){case 0:case 1:c=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((c=(c=i.trys).length>0&&c[c.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!c||a[1]>c[0]&&a[1]<c[3])){i.label=a[1];break}if(6===a[0]&&i.label<c[1]){i.label=c[1],c=a;break}if(c&&i.label<c[2]){i.label=c[2],i.ops.push(a);break}c[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=c=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};function n(){return{getStories:function(){return e(this,void 0,void 0,(function(){return t(this,(function(e){switch(e.label){case 0:return[4,fetch("https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty")];case 1:return[4,e.sent().json()];case 2:return[2,e.sent()]}}))}))},getStory:function(n){return e(this,void 0,void 0,(function(){return t(this,(function(e){switch(e.label){case 0:return[4,fetch("https://hacker-news.firebaseio.com/v0/item/".concat(n,".json?print=pretty"))];case 1:return[4,e.sent().json()];case 2:return[2,e.sent()]}}))}))},getComment:function(n){return e(this,void 0,void 0,(function(){return t(this,(function(e){switch(e.label){case 0:return[4,fetch("https://hacker-news.firebaseio.com/v0/item/".concat(n,".json?print=pretty"))];case 1:return[4,e.sent().json()];case 2:return[2,e.sent()]}}))}))}}}var r=function(e,t,n,r){return new(n||(n=Promise))((function(c,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function a(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?c(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}s((r=r.apply(e,t||[])).next())}))},c=function(e,t){var n,r,c,o,i={label:0,sent:function(){if(1&c[0])throw c[1];return c[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,a[0]&&(i=0)),i;)try{if(n=1,r&&(c=2&a[0]?r.return:a[0]?r.throw||((c=r.return)&&c.call(r),0):r.next)&&!(c=c.call(r,a[1])).done)return c;switch(r=0,c&&(a=[2&a[0],c.value]),a[0]){case 0:case 1:c=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((c=(c=i.trys).length>0&&c[c.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!c||a[1]>c[0]&&a[1]<c[3])){i.label=a[1];break}if(6===a[0]&&i.label<c[1]){i.label=c[1],c=a;break}if(c&&i.label<c[2]){i.label=c[2],i.ops.push(a);break}c[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=c=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},o=function(e){void 0===e&&(e=10);var t=1,o=1,i=[],a=[],s=[],u={};function l(){return r(this,void 0,void 0,(function(){var o,l,d,f,h,p=this;return c(this,(function(v){switch(v.label){case 0:return 0!==i.length?[3,2]:[4,n().getStories()];case 1:i=v.sent(),v.label=2;case 2:return o=(t-1)*e,l=t*e,a=i.slice(o,l),u[t.toString()]?(s=u[t],[3,7]):[3,3];case 3:return[4,a.map((function(e){return r(p,void 0,void 0,(function(){return c(this,(function(t){switch(t.label){case 0:return[4,n().getStory(e)];case 1:return[2,t.sent()]}}))}))}))];case 4:return d=v.sent(),[4,Promise.all(d)];case 5:return s=v.sent(),f=u,h=t.toString(),[4,Promise.all(d)];case 6:f[h]=v.sent(),v.label=7;case 7:return[2]}}))}))}function d(e){return r(this,void 0,void 0,(function(){var t,o=this;return c(this,(function(i){return t=document.createElement("div"),e.forEach((function(e){return r(o,void 0,void 0,(function(){function o(){return r(this,void 0,void 0,(function(){var e;return c(this,(function(t){switch(t.label){case 0:return 0!==i.kids.length?[3,1]:(h.removeEventListener("click",o),[3,3]);case 1:return[4,d(i.kids)];case 2:e=t.sent(),a.append(e),t.label=3;case 3:return h.removeEventListener("click",o),[2]}}))}))}var i,a,s,u,l,f,h;return c(this,(function(r){switch(r.label){case 0:return[4,n().getComment(e)];case 1:return i=r.sent(),console.log(i),(a=document.createElement("div")).classList.add("comment"),(s=document.createElement("div")).innerHTML=i.text,(u=document.createElement("p")).textContent="By: ".concat(i.by),l=document.createElement("p"),f=new Date(i.time).toLocaleString(),l.textContent="Time: ".concat(f),(h=document.createElement("p")).textContent="no.of comments: ".concat(i.kids?i.kids.length:"0"),a.appendChild(s),a.appendChild(u),a.appendChild(l),a.appendChild(h),t.append(a),h.addEventListener("click",o),[2]}}))}))})),[2,t]}))}))}return{indexNo:t,nextPage:function(){t=9+(o=o%10+1)},previousPage:function(){o--,(t=o-9)<1&&(t=(o=10)-9)},goToIndex:function(e){return t=e},render:function(){return r(this,void 0,void 0,(function(){var e;return c(this,(function(t){switch(t.label){case 0:return e=document.querySelector(".inner-container"),function(){for(var e=document.querySelector(".inner-container"),t=0;t<5;t++){var n=document.createElement("div");n.innerHTML='\n                <div class="box">\n                    <div class="skeleton skeleton-text"></div>\n                    <div class="skeleton skeleton-text"></div>\n                    <div class="skeleton skeleton-text"></div>\n                    <div class="skeleton skeleton-text"></div>\n                    <div class="skeleton skeleton-text"></div>\n                </div>\n            ',e.appendChild(n)}}(),[4,l()];case 1:return t.sent(),e.innerHTML="",s.forEach((function(t){var n=document.createElement("div");n.classList.add("box");var o=document.createElement("h2");o.textContent=t.title;var i=document.createElement("p");i.textContent="By: ".concat(t.by);var a=document.createElement("p"),s=document.createElement("a");s.href=t.url,s.textContent=t.url,a.appendChild(document.createTextNode("URL: ")),a.appendChild(s);var u=document.createElement("p"),l=new Date(t.time).toLocaleString();u.textContent="Time: ".concat(l),n.appendChild(o),n.appendChild(i),n.appendChild(a),n.appendChild(u),e.appendChild(n),n.addEventListener("click",(function(){!function(e){r(this,void 0,void 0,(function(){var t,n,r,o,i,a,s,u,l,f,h;return c(this,(function(c){switch(c.label){case 0:return t=document.querySelector(".inner-container"),(n=document.createElement("div")).classList.add("comment-box"),t.innerHTML="",(r=document.createElement("div")).classList.add("box"),(o=document.createElement("h2")).textContent=e.title,(i=document.createElement("p")).textContent="By: ".concat(e.by),a=document.createElement("p"),(s=document.createElement("a")).href=e.url,s.textContent=e.url,a.appendChild(document.createTextNode("URL: ")),a.appendChild(s),u=document.createElement("p"),l=new Date(e.time).toLocaleString(),u.textContent="Time: ".concat(l),(f=document.createElement("p")).textContent="no.of comments: ".concat(e.kids.length),r.appendChild(o),r.appendChild(i),r.appendChild(a),r.appendChild(u),r.appendChild(f),0!==e.kids.length?[3,1]:(n.innerHTML="No Comments to Show",[3,3]);case 1:return[4,d(e.kids)];case 2:h=c.sent(),n.append(h),c.label=3;case 3:return t.append(r,n),[2]}}))}))}(t)}))})),[2]}}))}))}}}(5),i=o.nextPage,a=o.previousPage,s=o.goToIndex,u=o.render,l=document.querySelector(".inner-container"),d=document.querySelectorAll(".nav-btn"),f=document.querySelector(".next-btn"),h=document.querySelector(".previous-btn");d.forEach((function(e,t){e.addEventListener("click",(function(){l.innerHTML="",s(t+1),u(),d.forEach((function(e){e.classList.remove("active")})),e.classList.add("active")}))})),f.addEventListener("click",(function(){l.innerHTML="",i(),u();var e=1;d.forEach((function(t,n){t.classList.contains("active")&&(e=n),t.classList.remove("active")})),d.forEach((function(t,n){n===e+1&&t.classList.add("active")}))})),h.addEventListener("click",(function(){l.innerHTML="",a(),u();var e=1;d.forEach((function(t,n){t.classList.contains("active")&&(e=n),t.classList.remove("active")})),d.forEach((function(t,n){0!=e&&n===e-1&&t.classList.add("active"),0===e&&0===n&&t.classList.add("active")}))})),u()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,